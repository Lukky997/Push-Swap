maitriser 3 elements;
sinon 2
sino rentrer danss l'algo


pb()
pb()
while (liste !trie)
{
	calcul target
	calcul cost
	algo pour push l'element;
}



IMPORTANT : 

— The magic number is 3. If your stack size is three, you should understand one thing.
When you have a stack in size of three, it means you don’t need to push something
or overcomplicate things. Because if the stack size is three, you only need one
operation to sort the stack. (Except two cases: which is a descending sorted stack
such as 3–2–1. And a sequence where the greatest number and second greatest number
switched places such as 1–3–2. Both scenarios would require two operations)
So remember this magic number.


typedef struct s_element
{
	int					number;
	int					push_cost;
	int					above_median;
	struct s_element	*target_node;
	struct s_element	*next;
}						t_element;

typedef struct s_pile
{
	t_element			*first;
	int					nb_element;
}

tant que i< la taille de av

inserer pile a ,atoi(av[i])


